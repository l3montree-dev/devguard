name: DevGuard PostgreSQL Workflow

on:
  push:
    tags:
    - '*'

# There is a single job in this workflow. It's configured to run on the latest available version of Ubuntu.
jobs:
  # Docker image build job
  build-image:
    uses: l3montree-dev/devguard-action/.github/workflows/build-image.yml@main
    with:
      artifact-name: "postgresql"
      asset-name: l3montree-cybersecurity/projects/devguard/assets/devguard-postgresql
      api-url: https://api.main.devguard.org
      web-ui: https://main.devguard.org
    secrets:
      devguard-token: ${{ secrets.DEVGUARD_TOKEN }}  
      build-args: "--context=. --dockerfile=Dockerfile.postgresql"

  # Image scanning job to detect vulnerabilities in the built Docker image
  container-scanning:
    uses: l3montree-dev/devguard-action/.github/workflows/container-scanning.yml@main
    needs: 
    - build-image
    with:
      asset-name: l3montree-cybersecurity/projects/devguard/assets/devguard-postgresql
      api-url: https://api.main.devguard.org
      artifact-name: "postgresql"
      web-ui: https://main.devguard.org
    secrets:
      devguard-token: ${{ secrets.DEVGUARD_TOKEN }}

  deploy:
    needs: 
    - build-image
    - container-scanning
    uses: l3montree-dev/devguard-action/.github/workflows/deploy.yml@main
    with:
      artifact-name: "postgresql"
      asset-name: l3montree-cybersecurity/projects/devguard/assets/devguard-postgresql
      api-url: https://api.main.devguard.org
    secrets:
      devguard-token: ${{ secrets.DEVGUARD_TOKEN }}     
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
  
  sign:
    needs: 
    - build-image
    - container-scanning
    uses: l3montree-dev/devguard-action/.github/workflows/sign.yml@main
    with:
      asset-name: l3montree-cybersecurity/projects/devguard/assets/devguard-postgresql
      api-url: https://api.main.devguard.org
      artifact-name: "postgresql"
    secrets:
      devguard-token: ${{ secrets.DEVGUARD_TOKEN }}
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')