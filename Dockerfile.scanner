FROM golang:1.25.1-trixie@sha256:715a1cb919c605b94859d2691bc11cad74e6245b94c70e7d6cddafb01ae44b14 AS golang-builder

# set the working directory
WORKDIR /app

ARG TARGETPLATFORM

ENV CRANE_VERSION=v0.20.6
ENV OS=Linux
ENV ARCH=x86_64
ENV TRIVY_VERSION=v0.66.0
ENV COSIGN_VERSION=v2.5.3
ENV GITLEAKS_VERSION=v8.28.0

# Expected checksums for security verification
ENV CRANE_CHECKSUM=c1d593d01551f2c9a3df5ca0a0be4385a839bd9b86d4a76e18d7b17d16559127
ENV TRIVY_CHECKSUM=93678741c3223c15120934ac00671ca7e797c9a5a4d89148db9ffca9184a5f0d
ENV COSIGN_CHECKSUM=783b5d6c74105401c63946c68d9b2a4e1aab3c8abce043e06b8510b02b623ec9
ENV GITLEAKS_CHECKSUM=a65b5253807a68ac0cafa4414031fd740aeb55f54fb7e55f386acb52e6a840eb

# install crane with checksum verification
RUN curl -sL "https://github.com/google/go-containerregistry/releases/download/${CRANE_VERSION}/go-containerregistry_${OS}_${ARCH}.tar.gz" > go-containerregistry.tar.gz && \
    echo "${CRANE_CHECKSUM}  go-containerregistry.tar.gz" | sha256sum -c - && \
    tar -zxvf go-containerregistry.tar.gz -C /usr/local/bin/ crane && \
    rm go-containerregistry.tar.gz

# install trivy with checksum verification
RUN curl -sL "https://github.com/aquasecurity/trivy/releases/download/${TRIVY_VERSION}/trivy_$(echo ${TRIVY_VERSION} | sed 's/v//')_Linux-64bit.tar.gz" > trivy.tar.gz && \
    echo "${TRIVY_CHECKSUM}  trivy.tar.gz" | sha256sum -c - && \
    tar -zxvf trivy.tar.gz -C /usr/local/bin/ trivy && \
    rm trivy.tar.gz

# install cosign with checksum verification
RUN curl -sL "https://github.com/sigstore/cosign/releases/download/${COSIGN_VERSION}/cosign-linux-amd64" > cosign-linux-amd64 && \
    echo "${COSIGN_CHECKSUM}  cosign-linux-amd64" | sha256sum -c - && \
    mv cosign-linux-amd64 /usr/local/bin/cosign && \
    chmod +x /usr/local/bin/cosign

# install gitleaks with checksum verification
RUN curl -sL "https://github.com/gitleaks/gitleaks/releases/download/${GITLEAKS_VERSION}/gitleaks_$(echo ${GITLEAKS_VERSION} | sed 's/v//')_linux_x64.tar.gz" > gitleaks.tar.gz && \
    echo "${GITLEAKS_CHECKSUM}  gitleaks.tar.gz" | sha256sum -c - && \
    tar -zxvf gitleaks.tar.gz -C /usr/local/bin/ gitleaks && \
    rm gitleaks.tar.gz   

#install unzip
RUN apt-get update && apt-get install -y unzip


COPY . .

# build the scanner
RUN CGO_ENABLED=0 make devguard-scanner
# ----------------------
# create final image with node:alpine
FROM alpine:3.22.1@sha256:4bcff63911fcb4448bd4fdacec207030997caf25e9bea4045fa6c8c44de311d1

RUN apk update && apk add --no-cache git python3 dbus dbus-x11
# Create virtualenvs
ENV VENV_DIR=/opt/tools
RUN python -m venv ${VENV_DIR}/semgrep && \
    python -m venv ${VENV_DIR}/checkov

# Install semgrep in its venv
RUN ${VENV_DIR}/semgrep/bin/pip install --upgrade pip && \
    ${VENV_DIR}/semgrep/bin/pip install semgrep==1.131.0

# Install checkov in its venv
RUN ${VENV_DIR}/checkov/bin/pip install --upgrade pip && \
    ${VENV_DIR}/checkov/bin/pip install checkov==3.2.457

# Create wrapper scripts using printf to avoid heredoc issues
RUN printf '#!/bin/sh\nexec %s/semgrep/bin/semgrep "$@"\n' "${VENV_DIR}" > /usr/local/bin/semgrep && \
    chmod +x /usr/local/bin/semgrep

RUN printf '#!/bin/sh\nexec %s/checkov/bin/checkov "$@"\n' "${VENV_DIR}" > /usr/local/bin/checkov && \
    chmod +x /usr/local/bin/checkov

# add venv bin to path
ENV PATH="/usr/local/bin/venv/bin:$PATH"

COPY --from=golang-builder /usr/local/go /usr/local/go
# add go to path
ENV PATH="/usr/local/go/bin:$PATH"

COPY --from=golang-builder /app/devguard-scanner /usr/local/bin/devguard-scanner
COPY --from=golang-builder /usr/local/bin/trivy /usr/local/bin/trivy
COPY --from=golang-builder /usr/local/bin/cosign /usr/local/bin/cosign
COPY --from=golang-builder /usr/local/bin/crane /usr/local/bin/crane
COPY --from=golang-builder /usr/local/bin/gitleaks /usr/local/bin/gitleaks

ENTRYPOINT [""]