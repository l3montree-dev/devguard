package models

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestVulnerability(t *testing.T) {
	t.Run("should add scanner ID to existing list", func(t *testing.T) {
		vuln := &FirstPartyVuln{
			ScannerIDs: "scanner1 scanner2",
		}

		vuln.AddScannerID("scanner3")

		expected := "scanner1 scanner2 scanner3"
		assert.Equal(t, expected, vuln.ScannerIDs, "ScannerIDs should include the newly added scanner ID")
	})

	t.Run("should remove scanner ID from list", func(t *testing.T) {
		vuln := &FirstPartyVuln{
			ScannerIDs: "scanner1 scanner2 scanner3",
		}

		vuln.RemoveScannerID("scanner2")

		expected := "scanner1 scanner3"
		assert.Equal(t, expected, vuln.ScannerIDs, "ScannerIDs should exclude the removed scanner ID")
	})

	t.Run("should add scanner ID to empty list", func(t *testing.T) {
		vuln := &FirstPartyVuln{
			ScannerIDs: "",
		}

		vuln.AddScannerID("scanner1")

		expected := "scanner1"
		assert.Equal(t, expected, vuln.ScannerIDs, "ScannerIDs should include the newly added scanner ID")
	})

	t.Run("should not add scanner if already exists", func(t *testing.T) {
		vuln := &FirstPartyVuln{
			ScannerIDs: "scanner1 scanner2",
		}
		vuln.AddScannerID("scanner1")
		expected := "scanner1 scanner2"

		assert.Equal(t, expected, vuln.GetScannerIDsOrArtifactNames(), "ScannerIDs should not change if the scanner ID already exists")
	})

	t.Run("should not change list when removing non existent scanner ID", func(t *testing.T) {
		vuln := &FirstPartyVuln{
			ScannerIDs: "scanner1 scanner2",
		}

		vuln.RemoveScannerID("scanner3")

		expected := "scanner1 scanner2"
		assert.Equal(t, expected, vuln.GetScannerIDsOrArtifactNames(), "ScannerIDs should remain unchanged if the scanner ID to remove is not present")
	})

	t.Run("should remove all instances of scanner ID", func(t *testing.T) {
		vuln := &FirstPartyVuln{
			ScannerIDs: "scanner1 scanner2 scanner2 scanner3",
		}

		vuln.RemoveScannerID("scanner2")

		expected := "scanner1 scanner3"
		assert.Equal(t, expected, vuln.ScannerIDs, "ScannerIDs should remove all instances of the specified scanner ID")
	})
}
