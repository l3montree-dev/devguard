apiVersion: v1
kind: ConfigMap
metadata:
  name: kratos-config
data:  
  {{- $publicUrl := (index .Values.web.ingress.hosts 0).host }}
  identity.schema.json: |
    {
        "$id": "https://schemas.ory.sh/presets/kratos/quickstart/email-password/identity.schema.json",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Person",
        "type": "object",
        "properties": {
            "traits": {
                "required": [
                    "email"
                ],
                "additionalProperties": false,
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "E-Mail",
                        "minLength": 3,
                        "ory.sh/kratos": {
                            "credentials": {
                                "password": {
                                    "identifier": true
                                },
                                "passkey": {
                                    "display_name": true
                                },
                                "webauthn": {
                                    "identifier": true
                                }
                            },
                            "verification": {
                                "via": "email"
                            },
                            "recovery": {
                                "via": "email"
                            }
                        }
                    },
                    "name": {
                        "type": "object",
                        "properties": {
                            "first": {
                                "title": "First Name",
                                "type": "string"
                            },
                            "last": {
                                "title": "Last Name",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    }
    
  kratos.yml: |
    serve: 
      public: 
        base_url: https://{{ $publicUrl }}/api/.ory/
        cors:
          enabled: true
    identity:
      default_schema_id: identity
      schemas:
      - id: identity
        url: file:///etc/config/identity.schema.json
    courier:
      smtp:
        from_address: {{ .Values.mail.fromAddress }}
        from_name: {{ .Values.mail.fromName }}
    selfservice:
      default_browser_return_url: https://{{ $publicUrl }}/
      allowed_return_urls: 
      - https://{{ $publicUrl }}/
      methods:
        oidc:
          enabled: {{ .Values.oidc.enabled }}
          config:
          {{- if .Values.oidc.enabled }}
            providers:
            {{- range .Values.oidc.providers }}
            - id: {{ .id }}
              provider: {{ .provider }}
              client_id: {{ .clientId }}
              client_secret: "will be overwritten with env variable"
              {{- if .issuerUrl }}
              issuer_url: {{ .issuerUrl | default "" | quote }}
              {{- end }}
              mapper_url: "base64://bG9jYWwgY2xhaW1zID0gewogIGVtYWlsX3ZlcmlmaWVkOiBmYWxzZSwKfSArIHN0ZC5leHRWYXIoJ2NsYWltcycpOwp7CiAgaWRlbnRpdHk6IHsKICAgIHRyYWl0czogewogICAgICAvLyBBbGxvd2luZyB1bnZlcmlmaWVkIGVtYWlsIGFkZHJlc3NlcyBlbmFibGVzIGFjY291bnQKICAgICAgLy8gZW51bWVyYXRpb24gYXR0YWNrcywgZXNwZWNpYWxseSBpZiB0aGUgdmFsdWUgaXMgdXNlZCBmb3IKICAgICAgLy8gZS5nLiB2ZXJpZmljYXRpb24gb3IgYXMgYSBwYXNzd29yZCBsb2dpbiBpZGVudGlmaWVyLgogICAgICAvLwogICAgICAvLyBUaGVyZWZvcmUgd2Ugb25seSByZXR1cm4gdGhlIGVtYWlsIGlmIGl0IChhKSBleGlzdHMgYW5kIChiKSBpcyBtYXJrZWQgdmVyaWZpZWQKICAgICAgLy8gYnkgR2l0SHViLgogICAgICBbaWYgJ2VtYWlsJyBpbiBjbGFpbXMgJiYgY2xhaW1zLmVtYWlsX3ZlcmlmaWVkIHRoZW4gJ2VtYWlsJyBlbHNlIG51bGxdOiBjbGFpbXMuZW1haWwsCiAgICAgIG5hbWU6IHsKICAgICAgICBmaXJzdDogY2xhaW1zLm5hbWUsCiAgICAgIH0sCiAgICB9LAogIH0sCn0="
            {{- if .scope }}
              scope:
              {{- range .scope }}
              - {{ . }}
              {{- end }}
            {{- end }}
                
            {{- end }}
          {{- else }}
            providers: []
          {{- end }}
            
        webauthn:
          enabled: true
          config:
            # If set to true will use WebAuthn for passwordless flows intead of multi-factor authentication.
            passwordless: true
            rp:
              # This MUST be your root domain (not a subdomain)
              id: {{ index (splitList "." $publicUrl) (sub (len (splitList "." $publicUrl)) 2) }}.{{ index (splitList "." $publicUrl) (sub (len (splitList "." $publicUrl)) 1) }}
              # This MUST be the exact URL of the page which will prompt for WebAuthn!
              # Only the scheme (https / http), host (auth.example.org), and port (4455) are relevant. The
              # path is irrelevant.
              origins:
              - https://{{ $publicUrl }}
              # A display name which will be shown to the user on her/his device.
              display_name: DevGuard

        passkey:
          enabled: true
          config:
            rp:
              id: {{ index (splitList "." $publicUrl) (sub (len (splitList "." $publicUrl)) 2) }}.{{ index (splitList "." $publicUrl) (sub (len (splitList "." $publicUrl)) 1) }}
              
              origins:
              - https://{{ $publicUrl }}
              display_name: DevGuard

        password:
          enabled: true
        totp:
          config:
            issuer: devguard
          enabled: true
        lookup_secret:
          enabled: false
        link:
          enabled: false
        code:
          enabled: true
      flows:
        error:
          ui_url: https://{{ $publicUrl }}/error
        settings:
          ui_url: https://{{ $publicUrl }}/user-settings
          privileged_session_max_age: 15m
          required_aal: highest_available
        recovery:
          enabled: true
          ui_url: https://{{ $publicUrl }}/recovery
          use: code
        verification:
          enabled: true
          ui_url: https://{{ $publicUrl }}/verification
          use: code
          after:
            default_browser_return_url: https://{{ $publicUrl }}/
        logout:
          after:
            default_browser_return_url: https://{{ $publicUrl }}/login
        login:
          ui_url: https://{{ $publicUrl }}/login
          lifespan: 10m
        registration:
          lifespan: 10m
          ui_url: https://{{ $publicUrl }}/registration
          after:
              password:
                  hooks:
                      - hook: session
              oidc:
                  hooks:
                      - hook: session
              passkey:
                  hooks:
                      - hook: session
              webauthn:
                  hooks:
                      - hook: session

