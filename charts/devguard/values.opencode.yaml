webauthn:
  enabled: false
passkey:
  enabled: false
password:
  enabled: false
totp:
  enabled: false
verificationAfterSignUp:
  enabled: false
oidc:
  enabled: true
  providers:
  - id: opencode
    provider: gitlab
    issuerUrl: https://gitlab.opencode.de
    clientId: 2cad228907b413b283640fa3df3704f0094fbcf200374dd8da2de613fc33f3f1
    scope:
    - read_user
    - openid
    - profile
    - email
    - read_api
    existingClientSecretName: opencode-client-secret
    existingBotUserSecretName: opencode-bot-user-access-token
    existingAdminTokenSecretName: opencode-admin-token
    botUserId: 9457
    autosetupApplication:
      clientId: 7fc816fe3917589f04a05727ab03a4f0b710b9d4697d9371b153ad5a9d5213b0
      existingClientSecretName: opencodeautosetup-appsecret
      scope:
      - api
# Default values for devguard.
# This is a YAML-formatted file.
# Declare variables to be passed into templates.
mail:
  # needs to contain key: "uri". Format should be like: smtps://<user>@<your-domain.com>:<secret>@<mail-server.de>:465/?skip_ssl_verify=false
  existingSMTPConnectionUriSecret: smtp-connection-uri
  fromAddress: "noreply@devguard.org"
  fromName: "DevGuard"
api:
  intoto:
    existingPrivateKeySecretName: ec-private-key
  github:
    appId: "1195682"
    existingWebhookSecretSecretName: github-app-webhook-secret
    existingPrivateKeySecretName: github-app-private-key
  replicaCount: 1
  image:
    repository: ghcr.io/l3montree-dev/devguard
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: 0.15.2 # {"$imagepolicy": "devguard-prod:api:tag"}
  imagePullSecrets: []
  podAnnotations: {}
  podLabels: {}

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  nodeSelector: {}
  tolerations: []
  affinity: {}
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      kubernetes.io/ingress.class: nginx
      # traefik.ingress.kubernetes.io/router.middlewares: devguard-devguard-api-svc-header@kubernetescrd,default-middleware@kubernetescrd
    hosts:
    - host: api.devguard.opencode.de
      paths:
      - path: /
        pathType: Prefix
    tls:
    - secretName: devguard-api-cert
      hosts:
      - api.devguard.opencode.de
web:
  devguardApiUrlPublicInternet: "https://api.devguard.opencode.de"
  image:
    repository: ghcr.io/l3montree-dev/devguard-web
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: 0.15.2 # {"$imagepolicy": "devguard-prod:web:tag"}
  imagePullSecrets: []
  podAnnotations: {}
  podLabels: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  nodeSelector: {}
  tolerations: []
  affinity: {}
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      # traefik.ingress.kubernetes.io/router.middlewares: devguard-devguard-web-svc-header@kubernetescrd,default-middleware@kubernetescrd
    hosts:
    - host: localhost:3000
      paths:
      - path: /
        pathType: Prefix
